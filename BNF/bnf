<Program> ::= <TestSpecification>
<TestSpecification> ::= <Definition> sut <SpecificationDeclaration> <TestDeclaration>+ <End>
<SpecificationDeclaration> ::= <Identifier> | <Identifier> : <Identifier>
<TestDeclaration> ::= <Definition> <TestHeader> <TestBody>+ <End>
<TestHeader> ::= when <String>
<TestBody> ::= because <BecauseStatement> | should <ShouldStatement>
<BecauseStatement> ::=  <identifier>(<identifierList>?) | csut(<identifierList>?)
<ShouldStatement> ::= return <identifier> | throw <identifier>
<identifierList> ::= <identifier> | <identifierList>, <identifier>
<Definition> ::= def
<End> ::= end
<Keywords> ::= def | sut | when | because | csut | should | throw | end

<String> consists of strings that must start with a letter, can contain numbers and underscore. Must not be a key word
